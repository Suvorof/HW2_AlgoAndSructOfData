using System;

namespace Task3
{
    class Program
    {
        static void Main()
        {
            // **Исполнитель "Калькулятор" преобразует целое число, записанное на экране. У исполнителя две команды, каждой присвоен номер:
            // 1. Прибавь 1.
            // 2. Умножь на 2.
            // Первая команда увеличивает число на экране на 1, вторая увеличивает его в 2 раза. Сколько существует программ, которые число 3
            // преобразуют в число 20?
            // a. С использование  массива.
            // b. *С использованием рекурсии.
            // Константин Суворов. Санкт-Петербург.

            // Я решил задачу на бумаге, но не могу реализовать её в коде. Прошу Вас разобрать эту задачу на уроке.

            // Если число делится на 2, то рекурентная формула: F(n) = F(n/2) + F(n-1);
            // Если число не делится на 2, то рекурентная формула: F(n) = F(n-1);
            // F(2) = 0.
            // F(3) = 1 т.к. число из самого себя можно получить с помощью только одной пустой программы.
            // n = 4; F(4) = F(2) + F(3) = 1;
            // n = 5; F(5) = F(4) = 1;
            // n = 6; F(6) = F(3) + F(5) = 2;
            // n = 7; F(7) = F(6) = 2;
            // n = 8; F(8) = F(4) + F(7) = 3;
            // n = 9; F(9) = F(8) = 3;
            // n = 10; F(10) = F(5) + F(9) = 4;
            // n = 11; F(11) = F(10) = 4;
            // n = 12; F(12) = F(6) + F(11) = 6;
            // n = 13; F(13) = F(12) = 6;
            // n = 14; F(14) = F(7) + F(13) = 8;
            // n = 15; F(15) = F(14) = 8;
            // n = 16; F(16) = F(8) + F(15) = 11;
            // n = 17; F(17) = F(16) = 11;
            // n = 18; F(18) = F(9) + F(17) = 14;
            // n = 19; F(19) = F(18) = 14;
            // n = 20; F(20) = F(10) + F(19) = 18;

            // Ответ: число программ равно 18-ти.

            int res = Task3(3, 20, 1, 2);
            Console.WriteLine($"\nres = {res}");
            Console.ReadKey();
        }

        static int Task3 (int start, int end, int plus, int mult)
        {
            int[] a = new int[100];
            a[start] = 1;
            for(int n = start + 1; n <= end; n++)
            {
                a[n] = (n % mult == 0) ? a[n / mult] + a[n - plus] : a[n - plus]; 
            }

            for(int n = 0; n <= end; n++)
            {
                Console.Write($"{a[n]} ");
            }
            return a[end];
        }

    }
}
